

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
}

def keystorePropertiesFile = rootProject.file("cinlibkey.properties");
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.cinemalib"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("cinlib_key.jks")
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keypassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "TYPE", '"RELEASE"'
        }
        debug {
            versionNameSuffix '-debug'
            applicationIdSuffix ".debug"
            buildConfigField "String", "TYPE", "DEBUG"
        }
        beta {
            initWith debug
            versionNameSuffix '-beta'
            applicationIdSuffix ".beta"
            buildConfigField "String", "TYPE", "BETA"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    flavorDimensions 'version'
    productFlavors {
        freeConfig {
            dimension 'version'
            versionNameSuffix '.free'
        }
        paidConfig {
            dimension 'version'
            versionNameSuffix '.paid'
        }
    }


    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def apiKey  = properties.getProperty("tmdb_api_key", "")
        it.buildConfigField "String", "MOVIEDB_API_KEY", apiKey
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'io.insert-koin:koin-android:3.2.0'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'io.coil-kt:coil:2.1.0'
    implementation  "androidx.room:room-runtime:2.4.3"
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.7'
    kapt  'androidx.room:room-compiler:2.4.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}